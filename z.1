.TH Z "1" "February 2011" "z" "User Commands"

.SH NAME
z \- jump around

.SH SYNOPSIS
z [\-h] [\-l] [\-r] [\-t] [regex1 regex2 ... regexn]

.SH AVAILABILITY
bash, zsh

.SH DESCRIPTION
Tracks your most used directories, based on 'frecency'.
.P
After a short learning phase, \fBz\fR will take you to the most 'frecent'
directory that matches ALL of the regexes given on the command line.

.SH OPTIONS
\fB\-h\fR show a brief help message
.br
\fB\-l\fR list only
.br
\fB\-r\fR match by rank only
.br
\fB\-t\fR match by recent access only
.br
\fB\--index\fR Index all subdirectories of the current dir
.br

.SH EXAMPLES
\fBz foo\fR     cd to most frecent dir matching foo
.br
\fBz foo bar\fR cd to most frecent dir matching foo and bar
.br
\fBz -r foo\fR  cd to highest ranked dir matching foo
.br
\fBz -t foo\fR  cd to most recently accessed dir matching foo
.br
\fBz -l foo\fR  list all dirs matching foo (by frecency)

.SH NOTES

\fBInstallation:\fR
.P
Optionally:
 Set \fB$_Z_CMD\fR in .bashrc/.zshrc to change the command (default \fBz\fR).
.br
 Set \fB$_Z_DATA\fR to change the datafile (default \fB$HOME/.z\fR).
.P
Put something like this in your \fB$HOME/.bashrc\fR:
.P
 \fB. /path/to/z.sh\fR
.P
Put something like this in your \fB$HOME/.zshrc\fR:
.P
 \fB. /path/to/z.sh
 function precmd () {
   _z --add "$(pwd -P)"
 }\fR
.P
\fBcd\fR around for a while to build up the db.
.P
PROFIT!!
.P
Optionally:
 Install the provided man page \fBz.1\fR somewhere like \fB/usr/local/man/man1\fB.
.br

\fBAging:\fR
.P
The rank of directories maintained by \fBz\fR undergoes aging based on a simple
formula. The rank of each entry is incremented every time it is accessed. When
the sum of ranks is greater than 1000, all ranks are multiplied by 0.9. Entries
with a rank lower than 1 are forgotten.
.br

\fBFrecency:\fR
.P
Frecency is a portmantaeu of 'recent' and 'frequency'. It is a weighted rank
that depends on how often and how recently something occured. As far as I
know, Mozilla came up with the term.
.P
To \fBz\fR, a directory that has low ranking but has been accessed recently
will quickly have higher rank than a directory accessed frequently a long time
ago.

Frecency is determined at runtime.
.br

\fBCommon:\fR
.P
When multiple directories match all queries, and they all have a common prefix,
\fBz\fR will cd to the shortest matching directory, without regard to priority.
This has been in effect, if undocumented, for quite some time, but should
probably be configurable or reconsidered.
.br

\fBTab Completion\fR
.P
\fBz\fR supports tab completion. After any number of arguments, press TAB to
complete on directories that match each argument. Due to limitations of the
completion implementations, only the last argument will be completed in the
shell.
.P
Internally, \fBz\fR decides you've requested a completion if the last argument
passed is an absolute path to an existing directory. This may cause unexpected
behavior if the last argument to \fBz\fR begins with \fB/\fR.
.br

.SH ENVIRONMENT
A function \fB_z()\fR is defined.
.P
An alias \fB$_Z_CMD\fR='_z 2>&1' is defined. If not set, \fB$_Z_CMD\fR defaults
to \fBz\fR.
.P
In bash, \fBz\fR uses the \fBPROMPT_COMMAND\fR environment variable to maintain
its database. Specifically it prepends:
.P
 \fB_z --add "$(pwd -P 2>/dev/null)" 2>/dev/null;\fR
.P
to any existing \fbPROMPT_COMMAND\fR. zsh users need to manually set
\fBprecmd()\fR as described in the installation instructions.

.SH FILES
Data is stored in \fB$_Z_DATA\fR. If not set, \fB$_Z_DATA\fR defaults to
\fB$HOME/.z\fR
.P
A man page (\fBz.1\fR) is provided.

.SH SEE ALSO
regex(7), cdargs, pushd, popd, autojump, cdargs
.P
Please file bugs at https://github.com/rupa/z/
